version: '3.8'

services:
  # ==========================================
  # DATABASE SERVICES
  # ==========================================
  
  postgres:
    image: postgres:15-alpine
    container_name: payment_system_db
    environment:
      POSTGRES_DB: payment_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - payment_network

  redis:
    image: redis:7-alpine
    container_name: payment_system_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - payment_network

  # ==========================================
  # AWS SERVICES SIMULATION (LocalStack)
  # ==========================================
  
  localstack:
    image: localstack/localstack:latest
    container_name: payment_localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    environment:
      - SERVICES=sqs,sns,lambda,secretsmanager
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker-reuse
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - PERSISTENCE=1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./localstack-data:/var/lib/localstack"
      - "./scripts/localstack-init.sh:/etc/localstack/init/ready.d/init.sh"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - payment_network

  # ==========================================
  # TEMPORAL WORKFLOW ENGINE
  # ==========================================
  
  temporal:
    image: temporalio/auto-setup:latest
    container_name: payment_temporal
    ports:
      - "7233:7233"  # Temporal Server gRPC
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=password
      - POSTGRES_SEEDS=postgres
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "tctl", "--address", "temporal:7233", "cluster", "health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - payment_network

  temporal-ui:
    image: temporalio/ui:latest
    container_name: payment_temporal_ui
    ports:
      - "8088:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    depends_on:
      temporal:
        condition: service_healthy
    networks:
      - payment_network


# ==========================================
# VOLUMES
# ==========================================

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  localstack_data:
    driver: local

# ==========================================
# NETWORKS
# ==========================================

networks:
  payment_network:
    driver: bridge
